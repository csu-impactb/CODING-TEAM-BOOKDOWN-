[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":", built comprehensive guide wet lab data collection, sample processing, computational tool creation robust efficient data analysis dissemination.","code":""},{"path":"immune-mechanisms-of-protection-against-mycobacterium-tuberculosis-impac-tb.html","id":"immune-mechanisms-of-protection-against-mycobacterium-tuberculosis-impac-tb","chapter":"2 Immune Mechanisms of Protection against Mycobacterium tuberculosis (IMPAc-TB)","heading":"2 Immune Mechanisms of Protection against Mycobacterium tuberculosis (IMPAc-TB)","text":"objective IMPAc-TB program get thorough understanding immune responses necessary avoid initial infection Mycobacterium tuberculosis (Mtb), formation latent infection, progression active TB illness. achieve goals, National Institute Allergy Infectious Diseases awarded substantial funding established multidisciplinary research teams analyze immune responses Mtb animal models (mice, guinea pigs, non-human primates) humans, well immune responses elicited promising vaccine candidates. contract awards establish give seven years assistance IMPAc-TB Centers explain immune responses required Mtb infection protection.","code":""},{"path":"initial-mouse-characteristics.html","id":"initial-mouse-characteristics","chapter":"3 Initial mouse characteristics","heading":"3 Initial mouse characteristics","text":"review existing methods.","code":""},{"path":"mouse-weights.html","id":"mouse-weights","chapter":"4 Mouse weights","heading":"4 Mouse weights","text":"Mice weighed grams weekly recorded excel worksheet. Column titles follows: who_collected date_collected sex dob notch_id mouse_number weight unit cage_number group notesGroups included : bcg, saline, bcg+id93, saline+id93, saline+noMtbThe notes column contains information regarding clinical observations.","code":"\nlibrary(readxl)\nlibrary(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──## ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n## ✓ tibble  3.1.6     ✓ dplyr   1.0.7\n## ✓ tidyr   1.1.4     ✓ stringr 1.4.0\n## ✓ readr   2.1.1     ✓ forcats 0.5.1## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## x dplyr::filter() masks stats::filter()\n## x dplyr::lag()    masks stats::lag()"},{"path":"mouse-weights.html","id":"read-in-data","chapter":"4 Mouse weights","heading":"4.1 Read in data","text":"","code":"\n#weight_data <- read_xlsx()"},{"path":"clean-data.html","id":"clean-data","chapter":"5 Clean data","heading":"5 Clean data","text":"","code":""},{"path":"summary-statistics.html","id":"summary-statistics","chapter":"6 Summary statistics","heading":"6 Summary statistics","text":"","code":""},{"path":"graph.html","id":"graph","chapter":"7 Graph","heading":"7 Graph","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"colony-forming-units-to-determine-bacterial-counts","chapter":"8 Colony forming units to determine bacterial counts","heading":"8 Colony forming units to determine bacterial counts","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"data-description","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.1 Data description","text":"data collected spreadsheet multiple sheets. first sheet\n(named “[x]”) used record metadata experiment, \nfollowing sheets used record CFUs counts plates used samples\norgan, one sheet per organ. example, plated data\nlung spleen, three sheets file: one\nmetadata, one plate counts lung, one \nplate counts spleen.metadata sheet used record information overall process \nplating data. Values sheet used calculating bacterial\nload original sample based CFU counts. spreadsheet includes\nfollowing columns:organ: Include one row organ plated experiment.\nname organ lowercase (e.g., “lung,” “spleen”). \nuse name also name sheet records data organ\nexample, rows metadata sheet “lung” “spleen,”\ntwo sheets file, one sheet named “lung” \none named “spleen,” ’ll use store plate counts \norgans.prop_resuspended: column, give proportion organ \nplated. example, plated half lung, “lung” row\nspread sheet, put 0.5 prop_resuspended column.total_resuspended_uL: column contains original volume tissue homogenate. example, raw lung tissue homogenized 500 uL PBS tube containing metal beads.og_aliquot_uL: 100 uL th total_resuspended slurry considered original aliquot used peform serial dilutions.dilution_factor: Amount original stock solution present total solution, dilution(s)plated_uL: Amount suspension + diluent plated section solid agar","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"read-in-data-1","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.2 Read in data","text":"","code":"\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(stringr)\n\n#Replace w/ path to CFU sheet\npath <- c(\"IMPAcTB/CODING-TEAM-BOOKDOWN-/example_spreadsheet/Copy of baa_cfu_sheet.xlsx\")\n\nsheet_names <- excel_sheets(path)\nsheet_names <- sheet_names[!sheet_names %in% c(\"metadata\")]\n\nmerged_data <- list()\n\nfor(i in 1:length(sheet_names)){\n  \n  data <- read_excel(path, sheet = sheet_names[i]) %>% \n    mutate(organ = paste0(sheet_names[i]))\n  \n  data <- data %>% \n    #mutate(missing_col = NA) %>% \n    mutate_if(is.double, as.numeric) %>% \n    mutate_if(is.numeric, as.character) %>% \n    pivot_longer(starts_with(\"dil_\"), names_to = \"dilution\",\n                 values_to = \"CFUs\") %>% \n    mutate(dilution = str_extract(dilution, \"[0-9]+\"),\n           dilution = as.numeric(dilution))\n    \n  \n  merged_data[[i]] <- data\n  \n  \n}\n  \nall_data <- bind_rows(merged_data, .id = \"column_label\") %>% \n    select(-column_label)"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"exploratory-analysis-and-quality-checks","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.3 Exploratory analysis and quality checks","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"exploratory-analysis","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.3.1 Exploratory analysis","text":"Dimensions input data:Based input data, data collected following organ \norgans:following number mice included :following number replicates recorded count date \nexperimental group:following number dilutions dilution level recorded \norgan:People plated collected data. Date dates counting:Based input data, plates included data counted \nfollowing person persons:\nBased input data, plates included data counted \nfollowing date dates:Distribution CFUs dilution:NEED ADD SAMPLE CFU PLOTSHere’s plot shows many plates numerous count \ndilution level:plot shows CFU counts distributed dilution\nlevel data:","code":"\nall_data %>%\n  select(organ, who_plated, who_counted, count_date) %>%\n  distinct()"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"identify-a-good-dilution-for-each-sample","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.4 Identify a good dilution for each sample","text":"","code":"\n# Make all_data into tidy data and filter for CFUs between 10-75\n  \ntidy_cfu_data <- all_data %>%\n  mutate(dilution = str_extract(dilution, \"[0-9]+\"),\n         dilution = as.numeric(dilution)) %>%\n  filter(CFUs >= 10 & CFUs <= 75) %>%\n  mutate(CFUs = as.numeric(CFUs))"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"calculate-cfus-from-best-dilutionestimate-bacterial-load-for-each-sample-based-on-good-dilution","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.5 Calculate CFUs from best dilution/Estimate bacterial load for each sample based on good dilution","text":"","code":"\n# Calculating CFU/ml for every qualifying replicate between 10-75 CFUs. Column binding by organ name to the metadata sheet via inner_join().\nmeta <- read_excel(path, sheet = \"metadata\")\n\ntidy_cfu_meta_joined <- inner_join(tidy_cfu_data, meta) %>%\n  group_by(groups) %>% \n  mutate(CFUs_per_ml = (CFUs * (dilution_factor^2) * (total_resuspension_mL/volume_plated_ul) * 10)) %>%\n  select(organ, count_date, who_plated, who_counted, groups,  mouse, dilution,  CFUs, CFUs_per_ml) %>%\n  ungroup()\n\ntidy_cfu_meta_joined"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"create-initial-report-information-for-these-data","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.6 Create initial report information for these data","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"sample-anova","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.7 Sample ANOVA","text":"","code":"\ncfu_stats <- tidy_cfu_meta_joined %>% \n  group_by(organ) %>%\n  nest() %>%\n  mutate(aov_result = map(data, ~aov(CFUs_per_ml ~ groups, data = .x)),\n         tukey_result = map(aov_result, TukeyHSD),\n         tidy_tukey = map(tukey_result, broom::tidy)) %>%\n  unnest(tidy_tukey, .drop = TRUE) %>%\n  separate(contrast, into = c(\"contrast1\", \"contrast2\"), sep = \"-\") %>%\n  select(-data, -aov_result, -tukey_result, -term, -null.value)# %>%\n  # filter(adj.p.value <= 0.05)\n\ncfu_stats"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"save-processed-data-to-database","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.8 Save processed data to database","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"example-one","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.9 Example one","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"example-two","chapter":"8 Colony forming units to determine bacterial counts","heading":"8.10 Example two","text":"","code":""},{"path":"elisa-words.html","id":"elisa-words","chapter":"9 ELISA Words","heading":"9 ELISA Words","text":"finished nice book.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]

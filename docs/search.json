[{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":", built comprehensive guide wet lab data collection, sample processing, computational tool creation robust efficient data analysis dissemination.","code":""},{"path":"introduction.html","id":"introduction","chapter":"2 Introduction","heading":"2 Introduction","text":"","code":""},{"path":"introduction.html","id":"about-the-project-immune-mechanisms-of-protection-against-mycobacterium-tuberculosis-impac-tb","chapter":"2 Introduction","heading":"2.1 About the project: Immune Mechanisms of Protection against Mycobacterium tuberculosis (IMPAc-TB)","text":"objective IMPAc-TB program get thorough understanding immune responses necessary avoid initial infection Mycobacterium tuberculosis (Mtb), formation latent infection, progression active TB illness. achieve goals, National Institute Allergy Infectious Diseases awarded substantial funding established multidisciplinary research teams analyze immune responses Mtb animal models (mice, guinea pigs, non-human primates) humans, well immune responses elicited promising vaccine candidates. contract awards establish give seven years assistance IMPAc-TB Centers explain immune responses required Mtb infection protection.seven centers part study (alphabetical order):Colorado State UniversityHarvard T.H. Chan School Public HealthSeattle Children HospitalColorado State University Team role member:\nDr. Marcela Henao-Tamayo: Principal Investigator\nDr. Brendan Podell: Principal Investigator\nDr. Andres Obregon-Henao: Research Scientist-III\nDr. Taru S. Dutt: Research Scientist-","code":""},{"path":"initial-mouse-characteristics.html","id":"initial-mouse-characteristics","chapter":"3 Initial mouse characteristics","heading":"3 Initial mouse characteristics","text":"review existing methods.","code":""},{"path":"mouse-weights.html","id":"mouse-weights","chapter":"4 Mouse Weights","heading":"4 Mouse Weights","text":"","code":""},{"path":"mouse-weights.html","id":"overview-1","chapter":"4 Mouse Weights","heading":"4.0.1 Overview","text":"Extreme weight loss loss muscle mass, also known cachexia, typically presents along side chronic inflammatory illnesses like Tuberculosis disease @ [baazim2022interplay]. now recognize cachexia part systemic response inflammation, linked upregulation pro-inflammatory cytokines TNF, IL-6, IFNg humans @ [baazim2022interplay]. Additionally, studies support role key immune cell populations CD8+ T-cells , depleted, counteract muscle fat deterioration @[baazim2019cd8], suggest CD8+ T-cells may metabolically reprogram adipose tissue.recognition cachexia related illnesses diseases, tracked progression weight loss course study, done many TB-mouse studies @ [smith2022host], @ [segueni2016controlled]. data also useful correlating CFU count well expression cytokines biological markers @ [smith2022host]. , mice weighed grams weekly monitor clinical status TB patients frequently display weight loss clinical symptom associated disease progression.following contains information data collected, organized, curated analysis RStudio.","code":""},{"path":"mouse-weights.html","id":"parameters","chapter":"4 Mouse Weights","heading":"4.0.2 Parameters","text":"Weights recorded excel worksheet.Column titles follows: who_collected date_collected sex dob notch_id mouse_number weight unit cage_number group notesGroups included : bcg, saline, bcg+id93, saline+id93, saline+noMtbThe notes column contains information regarding clinical observations.good reference: https://elifesciences.org/articles/74419#s4","code":"\nlibrary(readxl)\nlibrary(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n## ✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n## ✔ tibble  3.1.7     ✔ dplyr   1.0.9\n## ✔ tidyr   1.2.0     ✔ stringr 1.4.0\n## ✔ readr   2.1.2     ✔ forcats 0.5.1\n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## ✖ dplyr::filter() masks stats::filter()\n## ✖ dplyr::lag()    masks stats::lag()"},{"path":"mouse-weights.html","id":"read-in-data","chapter":"4 Mouse Weights","heading":"4.0.3 Read in data","text":"Data stored one excel sheet, week one sheet named date -> return vector sheet name","code":""},{"path":"mouse-weights.html","id":"can-also-use-rio-to-read-in-the-data-more-streamlined","chapter":"4 Mouse Weights","heading":"4.0.4 Can also use rio to read in the data, more streamlined","text":"","code":""},{"path":"mouse-weights.html","id":"clean-data","chapter":"4 Mouse Weights","heading":"4.0.5 Clean data","text":"","code":"\ndataset <- data$before_vaccination %>%\n select(\"sex\", \"mouse_number\", \"weight\", \"cage_number\", \"group\")\n# combining columns mouse_number and cage_number\n\ndataset$mouse_id <- paste(dataset$mouse_number, \"-\", dataset$cage_number)"},{"path":"mouse-weights.html","id":"body-weight-over-time-graph-and-statistics","chapter":"4 Mouse Weights","heading":"4.0.6 Body weight over time graph and statistics","text":"","code":""},{"path":"mouse-weights.html","id":"weight-loss-over-time-graph-and-statistics","chapter":"4 Mouse Weights","heading":"4.0.7 Weight loss over time graph and statistics","text":"","code":""},{"path":"mouse-weights.html","id":"weight-vs-cfu","chapter":"4 Mouse Weights","heading":"4.0.8 Weight vs CFU","text":"","code":""},{"path":"mouse-weights.html","id":"weight-vs-elisa-results","chapter":"4 Mouse Weights","heading":"4.0.9 Weight vs ELISA results","text":"","code":""},{"path":"mouse-weights.html","id":"weight-vs-lesion-burden","chapter":"4 Mouse Weights","heading":"4.0.10 Weight vs lesion burden","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"colony-forming-units-to-determine-bacterial-counts","chapter":"5 Colony forming units to determine bacterial counts","heading":"5 Colony forming units to determine bacterial counts","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"data-description","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.1 Data description","text":"data collected spreadsheet multiple sheets. first sheet\n(named “[x]”) used record metadata experiment, \nfollowing sheets used record CFUs counts plates used samples\norgan, one sheet per organ. example, plated data\nlung spleen, three sheets file: one\nmetadata, one plate counts lung, one \nplate counts spleen.metadata sheet used record information overall process \nplating data. Values sheet used calculating bacterial\nload original sample based CFU counts. spreadsheet includes\nfollowing columns:organ: Include one row organ plated experiment.\nname organ lowercase (e.g., “lung,” “spleen”). \nuse name also name sheet records data organ\nexample, rows metadata sheet “lung” “spleen,”\ntwo sheets file, one sheet named “lung” \none named “spleen,” ’ll use store plate counts \norgans.prop_resuspended: column, give proportion organ \nplated. example, plated half lung, “lung” row\nspread sheet, put 0.5 prop_resuspended column.total_resuspended_uL: column contains original volume tissue homogenate. example, raw lung tissue homogenized 500 uL PBS tube containing metal beads.og_aliquot_uL: 100 uL th total_resuspended slurry considered original aliquot used peform serial dilutions.dilution_factor: Amount original stock solution present total solution, dilution(s)plated_uL: Amount suspension + diluent plated section solid agar","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"read-in-data-1","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.2 Read in data","text":"","code":"\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(stringr)\n\n#Replace w/ path to CFU sheet\npath <- c(\"DATA/Copy of baa_cfu_sheet.xlsx\")\n\nsheet_names <- excel_sheets(path)\nsheet_names <- sheet_names[!sheet_names %in% c(\"metadata\")]\n\nmerged_data <- list()\n\nfor(i in 1:length(sheet_names)){\n  \n  data <- read_excel(path, sheet = sheet_names[i]) %>% \n    mutate(organ = paste0(sheet_names[i]))\n  \n  data <- data %>% \n    #mutate(missing_col = NA) %>% \n    mutate_if(is.double, as.numeric) %>% \n    mutate_if(is.numeric, as.character) %>% \n    pivot_longer(starts_with(\"dil_\"), names_to = \"dilution\",\n                 values_to = \"CFUs\") %>% \n    mutate(dilution = str_extract(dilution, \"[0-9]+\"),\n           dilution = as.numeric(dilution))\n    \n  \n  merged_data[[i]] <- data\n  \n  \n}\n  \nall_data <- bind_rows(merged_data, .id = \"column_label\") %>% \n    select(-column_label)"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"exploratory-analysis-and-quality-checks","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.3 Exploratory analysis and quality checks","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"exploratory-analysis","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.4 Exploratory analysis","text":"Dimensions input data:Based input data, data collected following organ \norgans:following number mice included :following number replicates recorded count date \nexperimental group:following number dilutions dilution level recorded \norgan:People plated collected data. Date dates counting:Based input data, plates included data counted \nfollowing person persons:\nBased input data, plates included data counted \nfollowing date dates:Distribution CFUs dilution:NEED ADD SAMPLE CFU PLOTSHere’s plot shows many plates numerous count \ndilution level:plot shows CFU counts distributed dilution\nlevel data:","code":"\nall_data %>%\n  select(organ, who_plated, who_counted, count_date) %>%\n  distinct()## # A tibble: 3 × 4\n##   organ  who_plated who_counted count_date            \n##   <chr>  <chr>      <chr>       <chr>                 \n## 1 lung   BK         BK          \"\\\"February 21 2022\\\"\"\n## 2 lung   BK         BK          \"\\\"April 18 2022\\\"\"   \n## 3 spleen JR         JR          \"\\\"April 25 2022\\\"\""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"identify-a-good-dilution-for-each-sample","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.5 Identify a good dilution for each sample","text":"","code":"\n# Make all_data into tidy data and filter for CFUs between 10-75\n  \ntidy_cfu_data <- all_data %>%\n  mutate(dilution = str_extract(dilution, \"[0-9]+\"),\n         dilution = as.numeric(dilution)) %>%\n  filter(CFUs >= 10 & CFUs <= 75) %>%\n  mutate(CFUs = as.numeric(CFUs))"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"calculate-cfus-from-best-dilutionestimate-bacterial-load-for-each-sample-based-on-good-dilution","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.6 Calculate CFUs from best dilution/Estimate bacterial load for each sample based on good dilution","text":"","code":"\n# Calculating CFU/ml for every qualifying replicate between 10-75 CFUs. Column binding by organ name to the metadata sheet via inner_join().\nmeta <- read_excel(path, sheet = \"metadata\")\n\ntidy_cfu_meta_joined <- inner_join(tidy_cfu_data, meta) %>%\n  group_by(groups) %>% \n  mutate(CFUs_per_ml = (CFUs * (dilution_factor^2) * (total_resuspension_mL/volume_plated_ul) * 10)) %>%\n  select(organ, count_date, who_plated, who_counted, groups,  mouse, dilution,  CFUs, CFUs_per_ml) %>%\n  ungroup()## Joining, by = \"organ\"\ntidy_cfu_meta_joined## # A tibble: 146 × 9\n##    organ count_date           who_p…¹ who_c…² groups mouse dilut…³  CFUs CFUs_…⁴\n##    <chr> <chr>                <chr>   <chr>   <chr>  <chr>   <dbl> <dbl>   <dbl>\n##  1 lung  \"\\\"February 21 2022… BK      BK      group… A           3    53    66.2\n##  2 lung  \"\\\"February 21 2022… BK      BK      group… A           5     4     5  \n##  3 lung  \"\\\"February 21 2022… BK      BK      group… A           6     2     2.5\n##  4 lung  \"\\\"February 21 2022… BK      BK      group… B           3   119   149. \n##  5 lung  \"\\\"February 21 2022… BK      BK      group… B           4    48    60  \n##  6 lung  \"\\\"February 21 2022… BK      BK      group… B           5    18    22.5\n##  7 lung  \"\\\"February 21 2022… BK      BK      group… C           3   120   150  \n##  8 lung  \"\\\"February 21 2022… BK      BK      group… C           4    32    40  \n##  9 lung  \"\\\"February 21 2022… BK      BK      group… D           3    53    66.2\n## 10 lung  \"\\\"February 21 2022… BK      BK      group… D           4    31    38.8\n## # … with 136 more rows, and abbreviated variable names ¹​who_plated,\n## #   ²​who_counted, ³​dilution, ⁴​CFUs_per_ml\n## # ℹ Use `print(n = ...)` to see more rows"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"create-initial-report-information-for-these-data","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.7 Create initial report information for these data","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"sample-anova","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.8 Sample ANOVA","text":"","code":"\ncfu_stats <- tidy_cfu_meta_joined %>% \n  group_by(organ) %>%\n  nest() %>%\n  mutate(aov_result = map(data, ~aov(CFUs_per_ml ~ groups, data = .x)),\n         tukey_result = map(aov_result, TukeyHSD),\n         tidy_tukey = map(tukey_result, broom::tidy)) %>%\n  unnest(tidy_tukey, .drop = TRUE) %>%\n  separate(contrast, into = c(\"contrast1\", \"contrast2\"), sep = \"-\") %>%\n  select(-data, -aov_result, -tukey_result, -term, -null.value)# %>%## Warning: The `.drop` argument of `unnest()` is deprecated as of tidyr 1.0.0.\n## All list-columns are now preserved.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\n  # filter(adj.p.value <= 0.05)\n\ncfu_stats## # A tibble: 9 × 7\n## # Groups:   organ [2]\n##   organ  contrast1 contrast2 estimate conf.low conf.high adj.p.value\n##   <chr>  <chr>     <chr>        <dbl>    <dbl>     <dbl>       <dbl>\n## 1 lung   group_2   group_1     -15.0     -39.4      9.34       0.377\n## 2 lung   group_3   group_1     -13.1     -39.2     13.1        0.562\n## 3 lung   group_4   group_1      -2.57    -27.1     22.0        0.993\n## 4 lung   group_3   group_2       1.98    -22.7     26.7        0.997\n## 5 lung   group_4   group_2      12.5     -10.5     35.5        0.491\n## 6 lung   group_4   group_3      10.5     -14.4     35.4        0.689\n## 7 spleen group_2   group_1     -21.5     -48.8      5.80       0.146\n## 8 spleen group_3   group_1     -17.6     -45.9     10.7        0.294\n## 9 spleen group_3   group_2       3.90    -23.4     31.2        0.935"},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"save-processed-data-to-database","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.9 Save processed data to database","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"example-one","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.10 Example one","text":"","code":""},{"path":"colony-forming-units-to-determine-bacterial-counts.html","id":"example-two","chapter":"5 Colony forming units to determine bacterial counts","heading":"5.11 Example two","text":"","code":""},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"enzyme-linked-immunosorbest-assay-elisa","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6 Enzyme-linked immunosorbest assay (ELISA)","text":"ELISA standard molecular biology assay detecting quantifying variety compounds, including peptides, proteins, antibodies sample. sample serum, plasma, bronchoalveolar lavage fluid (BALF).","code":""},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"importance-of-elisa","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.0.0.1 Importance of ELISA","text":"antigen-specific reaction host results production antibodies, proteins found blood. event infectious disease, aids detection antibodies body.ELISA distinguishable antibody-assays produces quantifiable findings separates non-specific specific interactions serial binding solid surfaces, often polystyrene multiwell plate.IMPAc-TB project, crucial evaluate vaccine eliciting humoral immunity generating antibodies vaccine antigen. ELISA used determine presence Immunoglobulin (Ig) IgG, IgA, IgM serum different time points post-vaccination.","code":""},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"principle-of-elisa","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.0.0.2 Principle of ELISA","text":"ELISA based principle antigen-antibody interaction. antigen must immobilized solid surface complexed enzyme-linked antibody ELISA. conjugated enzyme’s activity evaluated incubating substrate yield quantifiable result, enables detection. four basic steps ELISA:1. Coating multiwell plate antigen/antibody: step depends want detect sample. need evaluate presence antibody, plate coated antigen, vice versa. coat plate, fixed concentration antigen (protein) added 96 well high-binding plate (charged plate). Plate incubated night antigen 4 degree celsius (proteins temperature sensitive) antigens completely bound well.2. Blocking: possible every site well coated targeted antigen, uncovered areas. important block empty spaces primary antibody (add next step) binds spaces give us false positive results. , microplate well surface-binding sites blocked unrelated protein substance.common blocking agents bovine serum albumin, skim milk, casein. One best blocking agents use serum organism secondary (detection antibody) raised. example, secondary antibody raised goat, can use goat serum blocking agent.3. Probing: Probing step add sample containing antibodies want detect. primary antibody. antibodies antigen (coated) present sample, bind antigen high affinity.4. Washing: incubation sample containing primary antibody, wells washed unbound antibody washed away. Washing solution contains phosphate buffer saline + 0.05% tween-20 (mild detergent). 0.05% tween-20 washes away non-specific interactions strong, keeps specific interaction strong detached mild detergent.5. Detection: detect presence antibody-antigen complex, secondary antibody labelled enzyme (usually horseradish peroxidase) added wells, incubated washed.6. Signal Measurement: Finally detect “” “much” antibody present, chromogenic substrate (like 3,3’,5,5’-Tetramethylbenzidine) added wells, can cleaved enzyme tagged secondary antibody. color compund formed addition substrate, directly proportional amount antibody present sample. plate read plate reader, color converted numbers.\nFigure 6.1: caption\n","code":""},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"read-in-data-from-excel-file","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.1 Read in data from excel file","text":"","code":"\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(minpack.lm)\nelisa_raw_data <- read_excel(\"DATA/elisa_s1_07-25-20.xlsx\", sheet = \"S1\", col_names = FALSE,  range = \"B2:M9\")## New names:\n## • `` -> `...1`\n## • `` -> `...2`\n## • `` -> `...3`\n## • `` -> `...4`\n## • `` -> `...5`\n## • `` -> `...6`\n## • `` -> `...7`\n## • `` -> `...8`\n## • `` -> `...9`\n## • `` -> `...10`\n## • `` -> `...11`\n## • `` -> `...12`\nhead(elisa_raw_data)## # A tibble: 6 × 12\n##   ...1          ...2  ...3 ...4   ...5  ...6 ...7   ...8  ...9 ...10 ...11 ...12\n##   <chr>        <dbl> <dbl> <chr> <dbl> <dbl> <chr> <dbl> <dbl> <chr> <dbl> <dbl>\n## 1 5.199999999… 0.05  0.069 6.3E… 0.061 0.122 0.16… 0.145 0.135 6.80… 0.053 0.05 \n## 2 7.900000000… 0.098 0.069 6.80… 0.115 0.202 5.89… 0.134 0.069 0.106 0.05  0.075\n## 3 8.899999999… 0.133 0.119 OVRF… 3.87  2.32  OVRF… 3.85  2.12  OVRF… 3.21  1.02 \n## 4 OVRFLW       3.46  1.16  OVRF… 3.80  2.36  OVRF… 3.70  1.49  OVRF… 3.68  1.63 \n## 5 3.815999999… 1.82  0.446 3.89… 3.42  1.13  OVRF… 2.33  0.608 OVRF… 3.41  1.10 \n## 6 OVRFLW       3.69  1.43  OVRF… 3.66  1.27  3.839 1.74  0.444 2.49… 0.637 0.704"},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"tidy-the-data","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.2 Tidy the data","text":"","code":"\n# Convert all columns to numeric\n\nelisa_raw_data_numeric <- elisa_raw_data %>% \n  mutate_if(is.character, as.numeric)## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion\n\n## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion\n\n## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion\n\n## Warning in mask$eval_all_mutate(quo): NAs introduced by coercion\n# pivot longer the data\n\nelisa_raw_data_tidy <- pivot_longer(data = elisa_raw_data_numeric, cols = \"...1\":\"...12\", names_to = \"well_id\", values_to = \"od_450nm\")\n\n# remove \"...\" from the first column\n\nelisa_raw_data_tidy$well_id <- str_replace(elisa_raw_data_tidy$well_id, \"...\", \"\")\n\n# Add new column to the data_frame\n\nelisa_raw_data_tidy_new <- elisa_raw_data_tidy %>%\n  mutate(name = rep(LETTERS[1:8], each = 12))\n\nelisa_raw_data_tidy_new <- elisa_raw_data_tidy_new %>%\n  mutate(well_id = paste0(name, well_id)) %>%\n  select(-name)\n\nhead(elisa_raw_data_tidy_new)## # A tibble: 6 × 2\n##   well_id od_450nm\n##   <chr>      <dbl>\n## 1 A1         0.052\n## 2 A2         0.05 \n## 3 A3         0.069\n## 4 A4         0.063\n## 5 A5         0.061\n## 6 A6         0.122"},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"read-in-second-data-set","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.3 Read in second data set","text":"","code":"\nelisa_label_data <- read_excel(\"DATA/elisa_s1_07-25-20.xlsx\", sheet = \"S1\", col_names = FALSE,  range = \"Q2:AB9\")## New names:\n## • `` -> `...1`\n## • `` -> `...2`\n## • `` -> `...3`\n## • `` -> `...4`\n## • `` -> `...5`\n## • `` -> `...6`\n## • `` -> `...7`\n## • `` -> `...8`\n## • `` -> `...9`\n## • `` -> `...10`\n## • `` -> `...11`\n## • `` -> `...12`\nhead(elisa_label_data)## # A tibble: 6 × 12\n##   ...1        ...2   ...3  ...4  ...5  ...6  ...7  ...8  ...9  ...10 ...11 ...12\n##   <chr>       <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>\n## 1 blank       secon… naïv… 1A-1… 1A-1… 1A-1… 1A-2… 1A-2… 1A-2… 1A-3… 1A-3… 1A-3…\n## 2 1A-4 (1/250 1A-4 … 1A-4… 1B-1… 1B-1… 1B-1… 1B-2… 1B-2… 1B-2… 1B-3… 1B-3… 1B-3…\n## 3 1B-4 (1/250 1B-4 … 1B-4… 2A-1… 2A-1… 2A-1… 2A-2… 2A-2… 2A-2… 2A-3… 2A-3… 2A-3…\n## 4 2B-1 (1/250 2B-1 … 2B-1… 2B-2… 2B-2… 2B-2… 2B-3… 2B-3… 2B-3… 2B-4… 2B-4… 2B-4…\n## 5 3A-1 (1/250 3A-1 … 3A-1… 3A-2… 3A-2… 3A-2… 3A-3… 3A-3… 3A-3… 3A-4… 3A-4… 3A-4…\n## 6 3B-1 (1/250 3B-1 … 3B-1… 3B-2… 3B-2… 3B-2… 3B-3… 3B-3… 3B-3… 3B-4… 3B-4… 3B-4…\n# pivot longer the data\n\nelisa_label_data_tidy <- pivot_longer(data = elisa_label_data, cols = \"...1\":\"...12\", names_to = \"well_id\", values_to = \"information\")\n\n# remove \"...\" from the first column\n\nelisa_label_data_tidy$well_id <- str_replace(elisa_label_data_tidy$well_id, \"...\", \"\")\n\n# Add new column to the data_frame\n\nelisa_label_data_tidy_new <- elisa_label_data_tidy %>%\n  mutate(name = rep(LETTERS[1:8], each = 12))\n\nelisa_label_data_tidy_new <- elisa_label_data_tidy_new %>%\n  mutate(well_id = paste0(name, well_id)) %>%\n  select(-name)\n\nhead(elisa_label_data_tidy_new)## # A tibble: 6 × 2\n##   well_id information  \n##   <chr>   <chr>        \n## 1 A1      blank        \n## 2 A2      secondary    \n## 3 A3      naïve (1/250)\n## 4 A4      1A-1 (1/250  \n## 5 A5      1A-1 (1/1250 \n## 6 A6      1A-1 (1/6250"},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"join-the-od-table-with-the-information-table","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.4 Join the OD table with the information table","text":"","code":"\nelisa_data = elisa_raw_data_tidy_new %>% inner_join(elisa_label_data_tidy_new, by=\"well_id\")\n\nhead(elisa_data)## # A tibble: 6 × 3\n##   well_id od_450nm information  \n##   <chr>      <dbl> <chr>        \n## 1 A1         0.052 blank        \n## 2 A2         0.05  secondary    \n## 3 A3         0.069 naïve (1/250)\n## 4 A4         0.063 1A-1 (1/250  \n## 5 A5         0.061 1A-1 (1/1250 \n## 6 A6         0.122 1A-1 (1/6250"},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"separate-the-information-tabke-into-sample-id-and-dilution-columns","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.5 Separate the information tabke into sample ID and dilution columns","text":"","code":"\ntidy_elisa_data <- separate(elisa_data, col = \"information\", into = c(\"sample_id\", \"dilution\"), sep = \"\\\\(\")## Warning: Expected 2 pieces. Missing pieces filled with `NA` in 2 rows [1, 2].\nhead(tidy_elisa_data)## # A tibble: 6 × 4\n##   well_id od_450nm sample_id   dilution\n##   <chr>      <dbl> <chr>       <chr>   \n## 1 A1         0.052 \"blank\"     <NA>    \n## 2 A2         0.05  \"secondary\" <NA>    \n## 3 A3         0.069 \"naïve \"    1/250)  \n## 4 A4         0.063 \"1A-1 \"     1/250   \n## 5 A5         0.061 \"1A-1 \"     1/1250  \n## 6 A6         0.122 \"1A-1 \"     1/6250\ntidy_elisa_data <- tidy_elisa_data %>%\n  mutate(dilution = str_extract(dilution, \"(/)[0-9]+\"),\n         dilution = str_replace(dilution, \"/\", \"\"),\n         dilution = as.numeric(dilution))\n\ntidy_elisa_data <- tidy_elisa_data %>%\n  select(well_id, sample_id, dilution, od_450nm)\n\nhead(tidy_elisa_data)## # A tibble: 6 × 4\n##   well_id sample_id   dilution od_450nm\n##   <chr>   <chr>          <dbl>    <dbl>\n## 1 A1      \"blank\"           NA    0.052\n## 2 A2      \"secondary\"       NA    0.05 \n## 3 A3      \"naïve \"         250    0.069\n## 4 A4      \"1A-1 \"          250    0.063\n## 5 A5      \"1A-1 \"         1250    0.061\n## 6 A6      \"1A-1 \"         6250    0.122"},{"path":"enzyme-linked-immunosorbest-assay-elisa.html","id":"elisa-data-analysis-optimization","chapter":"6 Enzyme-linked immunosorbest assay (ELISA)","heading":"6.6 ELISA data analysis optimization","text":"ELISA data can analyzed different ways based data acquired. examples type ELISA data:1. standard curve: ELISA can used determine concentrations antigen antibody. type ELISA data usually standard curve \ndifferent concentrations known analyte concentration sample determined extrapolating unknown values curve. type assay straightforward, easy interpret robust.2. Without standard curve: Usually vaccine studies involve investigating presence high-affinity (novel) antibodies vaccine antigens.\nTherefore, plotting standard curve feasible previous information available antibody concentration type antibody. Also, antibody response vaccine differ depending individual,\npractical generate calibration curve absolute concentrations can extrapolated.\ntype ELISA, quantification antibody titers performed using serial dilutions test samples, analysis can performed using following three methods:Fitting sigmoid modelEndpoint titer method\n3: Absorbance summation methodLet’s look methods, can apply methods data, R-based packages can utilize perform tis analysis.1. Fitting sigmoid model: model, perform 8-10 point serial dilution sample plot 4 parameter sigmoidal curve. Example data:","code":"\nelisa_example_data <- read_excel(\"DATA/example_elisa_data.xlsx\")\n\n# separate 1/\n\nelisa_example_data <- separate(elisa_example_data, col = \"dilution\", into = c(\"numerator\", \"denomenator\"), sep = \"\\\\/\")\n\nelisa_example_data <- elisa_example_data %>% \n  mutate_if(is.character, as.numeric)\n\nelisa_example_data$dilution <- elisa_example_data$numerator / elisa_example_data$denomenator  \n\nelisa_example_data <- elisa_example_data %>%\n  mutate(log_dilution = log(dilution, base = 3))\n\nhead(elisa_example_data)## # A tibble: 6 × 5\n##   numerator denomenator absorbance dilution log_dilution\n##       <dbl>       <dbl>      <dbl>    <dbl>        <dbl>\n## 1         1          30       4    0.0333          -3.10\n## 2         1          90       3.73 0.0111          -4.10\n## 3         1         270       2.34 0.00370         -5.10\n## 4         1         810       1.1  0.00123         -6.10\n## 5         1        2430       0.51 0.000412        -7.10\n## 6         1        7290       0.22 0.000137        -8.10\nmod_1 <- nlsLM(absorbance ~ ((a-d)/(1+(log_dilution/c)^b)) + d,\ndata = elisa_example_data, \nstart = list (a = 4, d= 0, c = -5, b = 1))\n\nmod_1## Nonlinear regression model\n##   model: absorbance ~ ((a - d)/(1 + (log_dilution/c)^b)) + d\n##    data: elisa_example_data\n##        a        d        c        b \n##  4.12406  0.04532 -5.31056  7.62972 \n##  residual sum-of-squares: 0.02221\n## \n## Number of iterations to convergence: 9 \n## Achieved convergence tolerance: 1.49e-08\nelisa_example_data %>%\n  ggplot(aes(x = log_dilution, y = absorbance)) +\n  geom_point() +\n  geom_line()"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
